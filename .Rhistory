boxplot(
capital_run_length_average~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,20),
xlab = "Email Classification",
ylab = "% Usage of CAPITAL LETTERS",
main = "Relationship between Classification and usage of CAPITAL LETTERS",
col=(c("green","tomato3")),
notch = T
)
boxplot(
capital_run_length_average~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,5),
xlab = "Email Classification",
ylab = "% Usage of CAPITAL LETTERS",
main = "Relationship between Classification and usage of CAPITAL LETTERS",
col=(c("green","tomato3")),
notch = T
)
boxplot(
capital_run_length_average~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,20),
xlab = "Email Classification",
ylab = "% Usage of CAPITAL LETTERS",
main = "Relationship between Classification and usage of CAPITAL LETTERS",
col=(c("green","tomato3")),
notch = T
)
newdat <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat$class = predict(mymodel_1, newdata=newdat, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat, col="green4", lwd=2)
newdat <- data.frame(word_freq_free=seq(min(train$word_freq_free), max(train$word_freq_free),len=200))
newdat$class = predict(mymodel_2, newdata=newdat, type="response")
plot(class~word_freq_free, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word FREE", main = "Logistic Regression")
lines(class ~ word_freq_free, newdat, col="green4", lwd=2)
newdat <- data.frame(char_freq_.21=seq(min(train$char_freq_.21), max(train$char_freq_.21),len=200))
newdat$class = predict(mymodel_5, newdata=newdat, type="response")
plot(class~char_freq_.21, data=train, col="red4", xlim = c(0,6),  xlab = "Frequency of char !", main = "Logistic Regression")
lines(class ~ char_freq_.21, newdat, col="green4", lwd=2)
newdat <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat$class = predict(mymodel_1, newdata=newdat, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat, col="green4", lwd=2)
newdat_1 <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat_1$class = predict(mymodel_1, newdata=newdat_1, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat_1, col="green4", lwd=2)
newdat <- data.frame(word_freq_free=seq(min(train$word_freq_free), max(train$word_freq_free),len=200))
newdat$class = predict(mymodel_2, newdata=newdat, type="response")
plot(class~word_freq_free, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word FREE", main = "Logistic Regression")
lines(class ~ word_freq_free, newdat, col="green4", lwd=2)
newdat_1 <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat_1$class = predict(mymodel_1, newdata=newdat_1, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat_1, col="green4", lwd=2)
newdat_2 <- data.frame(word_freq_free=seq(min(train$word_freq_free), max(train$word_freq_free),len=200))
newdat_2$class = predict(mymodel_2, newdata=newdat_2, type="response")
plot(class~word_freq_free, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word FREE", main = "Logistic Regression")
lines(class ~ word_freq_free, newdat_2, col="green4", lwd=2)
newdat_1 <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat_1$class = predict(mymodel_1, newdata=newdat_1, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat_1, col="green4", lwd=2)
newdat_3 <- data.frame(word_freq_our=seq(min(train$word_freq_our), max(train$word_freq_our),len=200))
newdat_3$class = predict(mymodel_3, newdata=newdat_3, type="response")
plot(class~word_freq_our, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word OUR", main = "Logistic Regression")
lines(class ~ word_freq_our, newdat_3, col="green4", lwd=2)
newdat_4 <- data.frame(word_freq_you=seq(min(train$word_freq_you), max(train$word_freq_you),len=200))
newdat_4$class = predict(mymodel_4, newdata=newdat_4, type="response")
plot(class~word_freq_you, data=train, col="red4", xlim = c(0,15),  xlab = "Frequency of word YOU", main = "Logistic Regression")
lines(class ~ word_freq_you, newdat_4, col="green4", lwd=2)
newdat_3 <- data.frame(word_freq_our=seq(min(train$word_freq_our), max(train$word_freq_our),len=200))
newdat_3$class = predict(mymodel_3, newdata=newdat_3, type="response")
plot(class~word_freq_our, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word OUR", main = "Logistic Regression")
lines(class ~ word_freq_our, newdat_3, col="green4", lwd=2)
newdat_5 <- data.frame(char_freq_.21=seq(min(train$char_freq_.21), max(train$char_freq_.21),len=200))
newdat_5$class = predict(mymodel_5, newdata=newdat_5, type="response")
plot(class~char_freq_.21, data=train, col="red4", xlim = c(0,6),  xlab = "Frequency of char !", main = "Logistic Regression")
lines(class ~ char_freq_.21, newdat_5, col="green4", lwd=2)
cor(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_you) #
plot(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_you, xlim = c(0,6),  xlab = "Frequency of char !",ylab = "Frequency of word YOU", main = "Relation between frequency of ! and YOU, SPAM")
cor(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_you)
plot(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_you, xlim = c(0,6),ylim=c(0,12),  xlab = "Frequency of char !",ylab = "Frequency of word YOU", main = "Relation between frequency of ! and YOU, NONSPAM")
cor(email_dataset_spam$word_freq_our, email_dataset_spam$word_freq_you) #
plot(email_dataset_spam$word_freq_our, email_dataset_spam$word_freq_you, xlab = "Frequency of word OUR",ylab = "Frequency of word YOU", main = "Relation between frequency of OUR and YOU, SPAM")
cor(email_dataset_nonspam$word_freq_our, email_dataset_nonspam$word_freq_you)
plot(email_dataset_nonspam$word_freq_our, email_dataset_nonspam$word_freq_you, ylim=c(0,12), xlab = "Frequency of word OUR",ylab = "Frequency of word YOU", main = "Relation between frequency of OUR and YOU, NONSPAM")
library(caTools)
file_path <- "D:/Docs/PROJECT"
getwd()
setwd(file_path)
getwd()
#import csv
file <- "dataset_44_spambase.csv"
email_dataset_all <- read.csv(file, stringsAsFactors = F)
### load dataset
email_dataset <- email_dataset_all[, c(5, 16, 19, 52, 55, 58)]
email_dataset_spam <- email_dataset[email_dataset$class == 1, ]
email_dataset_nonspam <- email_dataset[email_dataset$class == 0, ]
### mode function
modeFunction <- function(values) {
uniqueValues <- unique(values)
uniqueValues[which.max(tabulate(match(values, uniqueValues)))]
}
### descriptive statistics
getDescriptiveStatistics <- function(values, type) {
meanValue <- mean(values)
medianValue <- median(values)
modeValue <- modeFunction(values)
stanDeviationValue <- sd(values)
variationValue <- var(values)
Type <- type
result_table <- data.frame(meanValue, medianValue, modeValue, stanDeviationValue, variationValue, Type)
return(result_table)
}
###Анализ на непрекъснати величини
### Capital Run Length Average Descriptive Statistics
ds_capital_run_len_average_all <- getDescriptiveStatistics(email_dataset$capital_run_length_average, "All")
ds_capital_run_len_average_spam <-  getDescriptiveStatistics(email_dataset_spam$capital_run_length_average, "Spam")
ds_capital_run_len_average_nonspam <-  getDescriptiveStatistics(email_dataset_nonspam$capital_run_length_average, "Non-spam")
### Word Frequency "you" Descriptive Statistics
ds_word_freq_you_all <-  getDescriptiveStatistics(email_dataset$word_freq_you, "All")
ds_word_freq_you_spam <-  getDescriptiveStatistics(email_dataset_spam$word_freq_you, "Spam")
ds_word_freq_you_nonspam <-  getDescriptiveStatistics(email_dataset_nonspam$word_freq_you, "Non-spam")
### Word Frequency "our" Descriptive Statistics
ds_word_freq_our_all <-  getDescriptiveStatistics(email_dataset$word_freq_our, "All")
ds_word_freq_our_spam <-  getDescriptiveStatistics(email_dataset_spam$word_freq_our, "Spam")
ds_word_freq_our_nonspam <-  getDescriptiveStatistics(email_dataset_nonspam$word_freq_our, "Non-spam")
### Word Frequency "free" Descriptive Statistics
ds_word_freq_free_all <-  getDescriptiveStatistics(email_dataset$word_freq_free, "All")
ds_word_freq_free_spam <-  getDescriptiveStatistics(email_dataset_spam$word_freq_free, "Spam")
ds_word_freq_free_nonspam <-  getDescriptiveStatistics(email_dataset_nonspam$word_freq_free, "Non-spam")
### Character Frequency "!" Descriptive Statistics
ds_char_freq_excl_mark_all <-  getDescriptiveStatistics(email_dataset$char_freq_.21, "All")
ds_char_freq_excl_mark_spam <-  getDescriptiveStatistics(email_dataset_spam$char_freq_.21, "Spam")
ds_char_freq_excl_mark_nonspam <-  getDescriptiveStatistics(email_dataset_nonspam$char_freq_.21, "Non-spam")
ds_capital_run_len_average <- rbind(ds_capital_run_len_average_all, ds_capital_run_len_average_spam, ds_capital_run_len_average_nonspam)
print("Descriptive Statistics of capital run length average")
ds_capital_run_len_average
ds_word_freq_you <- rbind(ds_word_freq_you_all, ds_word_freq_you_spam, ds_word_freq_you_nonspam)
print("Descriptive Statistics of word frequency YOU")
ds_word_freq_you
ds_word_freq_our <- rbind(ds_word_freq_our_all, ds_word_freq_our_spam, ds_word_freq_our_nonspam)
print("Descriptive Statistics of word frequency OUR")
ds_word_freq_our
ds_word_freq_free <- rbind(ds_word_freq_free_all, ds_word_freq_free_spam, ds_word_freq_free_nonspam)
print("Descriptive Statistics of word frequency FREE")
ds_word_freq_free
ds_char_freq_excl_mark <- rbind(ds_char_freq_excl_mark_all, ds_char_freq_excl_mark_spam, ds_char_freq_excl_mark_nonspam)
print("Descriptive Statistics of char frequency !")
ds_char_freq_excl_mark
### export to csv
# write.csv(ds_capital_run_len_average, "descStatCLA.csv")
# write.csv(ds_word_freq_you, "descStatYOU.csv")
# write.csv(ds_word_freq_our, "descStatOUR.csv")
# write.csv(ds_word_freq_free, "descStatFREE.csv")
# write.csv(ds_char_freq_excl_mark, "descStat!.csv")
### histograms
hist(
x = email_dataset_spam$capital_run_length_average,
las = 1 ,
xlim = c(0,20),
xlab = "% usage",
breaks = 1000,
col = "tomato3",
border="brown",
main = "Capital Letter Run Length Average, SPAM"
)
hist(
x = email_dataset_spam$word_freq_you,
las = 1 , xlim = c(0,10), breaks = 50,
xlab = "% usage",
col = "tomato3",
border="brown",
main = "Usage of the word YOU, SPAM"
)
hist(
x = email_dataset_spam$word_freq_free,
las = 1 , xlim = c(0,5), breaks = 100,
xlab = "% usage",
col = "tomato3",
border="brown",
main = "Usage of the word FREE, SPAM"
)
hist(
x = email_dataset_spam$word_freq_our,
las = 1 , xlim = c(0,4.5),
breaks = 50,
xlab = "% usage",
col = "tomato3",
border="brown",
main = "Usage of the word OUR, SPAM"
)
hist(
x = email_dataset_spam$char_freq_.21,
las = 1 ,
xlim = c(0, 4),
breaks = 100,
xlab = "% usage",
col = "tomato3",
border="brown",
main = "Usage of the character !, SPAM"
)
hist(
x = email_dataset_nonspam$capital_run_length_average,
las = 1 ,
xlim = c(0,10),
xlab = "% usage",
breaks = 1000,
col = "green",
border = "forestGreen",
main = "Capital Letter Run Length Average, NON-SPAM"
)
hist(
x = email_dataset_nonspam$word_freq_you,
las = 1 ,
xlim = c(0,10),
breaks = 100,
xlab = "% usage",
col = "green",
border = "forestGreen",
main = "Usage of the word YOU, NON-SPAM"
)
hist(
x = email_dataset_nonspam$word_freq_free,
las = 1 ,
xlim = c(0,2),
breaks = 250,
xlab = "% usage",
col = "green",
border = "forestGreen",
main = "Usage of the word FREE, NON-SPAM"
)
hist(
x = email_dataset_nonspam$word_freq_our,
las = 1 ,
xlim = c(0,3),
breaks =100,
xlab = "% usage",
col = "green",
border = "forestGreen",
main = "Usage of the word OUR, NON-SPAM"
)
hist(
x = email_dataset_nonspam$char_freq_.21,
las = 1 , xlim = c(0, 1.5),
breaks = 400,
xlab = "% usage",
col = "green",
border = "forestGreen",
main = "Usage of the character !, NON-SPAM"
)
hist(
x = email_dataset$capital_run_length_average,
las = 1 ,
xlim = c(0,20),
xlab = "% usage",
breaks = 1000,
col = "skyblue",
border = "navy",
main = "Capital Letter Run Length Average, All"
)
hist(
x = email_dataset$word_freq_you,
las = 1 ,
xlim = c(0,10),
breaks = 50,
xlab = "% usage",
col = "skyblue",
border = "navy",
main = "Usage of the word YOU, All"
)
hist(
x = email_dataset$word_freq_free,
las = 1 ,
xlim = c(0,3),
breaks = 100,
xlab = "% usage",
col = "skyblue",
border = "navy",
main = "Usage of the word FREE, All"
)
hist(
x = email_dataset$word_freq_our,
las = 1 ,
xlim = c(0,4.5),
breaks = 50,
xlab = "% usage",
col = "skyblue",
border = "navy",
main = "Usage of the word OUR, All"
)
hist(
x = email_dataset$char_freq_.21,
las = 1 ,
xlim = c(0, 2),
breaks = 400,
xlab = "% usage",
col = "skyblue",
border = "navy",
main = "Usage of the character !, All"
)
# Анализ на категорийна величина class
mails <- c(rep("Spam", nrow(email_dataset_spam)), rep("Non-spam", nrow(email_dataset_nonspam)))
mails_table <- table(mails)
pie(mails_table, main = "Emails pie chart", col = rainbow(length(mails_table)), border = rainbow(length(mails_table)))
piepercent<- round(100*mails_table/sum(mails_table), 1)
pie(mails_table, labels = paste(piepercent, "%", sep = ""), main = "Emails pie chart", col = rainbow(n = length(mails_table)))
legend(x = "bottomleft", legend = c("Spam", "Non-spam"), cex = 1,
fill = rainbow(length(mails_table)))
####################################################################################################################
### shapiro test
shapiro.test(email_dataset_spam$capital_run_length_average)
shapiro.test(email_dataset_spam$word_freq_our)
shapiro.test(email_dataset_spam$word_freq_free)
shapiro.test(email_dataset_spam$word_freq_you)
shapiro.test(email_dataset_spam$char_freq_.21)
shapiro.test(email_dataset_nonspam$capital_run_length_average)
shapiro.test(email_dataset_nonspam$word_freq_our)
shapiro.test(email_dataset_nonspam$word_freq_free)
shapiro.test(email_dataset_nonspam$word_freq_you)
shapiro.test(email_dataset_nonspam$char_freq_.21)
### Boxplots
boxplot(
char_freq_.21~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,5),
xlab = "Email Classification",
ylab = "% Usage of !",
main = "Relationship between Classification and usage of ! sign",
col=(c("green","tomato3"))
)
boxplot(
word_freq_our~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,5),
xlab = "Email Classification",
ylab = "% Usage of word OUR",
main = "Relationship between Classification and usage of word OUR",
col=(c("green","tomato3"))
)
boxplot(
word_freq_free~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,5),
xlab = "Email Classification",
ylab = "% Usage of word FREE",
main = "Relationship between Classification and usage of word FREE",
col=(c("green","tomato3"))
)
boxplot(
word_freq_you~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,10),
xlab = "Email Classification",
ylab = "% Usage of word YOUR",
main = "Relationship between Classification and usage of word YOU",
col=(c("green","tomato3")),
notch = T
)
boxplot(
capital_run_length_average~ifelse(class==0,"Non-Spam", "Spam"),
data = email_dataset,
ylim = c(0,20),
xlab = "Email Classification",
ylab = "% Usage of CAPITAL LETTERS",
main = "Relationship between Classification and usage of CAPITAL LETTERS",
col=(c("green","tomato3")),
notch = T
)
###wilcoxon test
wilcox.test(email_dataset_spam$capital_run_length_average, email_dataset_nonspam$capital_run_length_average)
wilcox.test(email_dataset_spam$word_freq_you, email_dataset_nonspam$word_freq_you)
wilcox.test(email_dataset_spam$word_freq_our, email_dataset_nonspam$word_freq_our)
wilcox.test(email_dataset_spam$word_freq_free, email_dataset_nonspam$word_freq_ree)
wilcox.test(email_dataset_spam$char_freq_.21, email_dataset_nonspam$char_freq_.21)
#################################################################################
#################################################################################
#Logistic regression model
################################################################################
model.email_data <- email_dataset
model.email_data$class <- as.numeric(model.email_data$class)
split <- sample.split(model.email_data, SplitRatio = 0.8)
train <- subset(model.email_data, split == "TRUE")
test <- subset(model.email_data, split == "FALSE")
mymodel <- glm(class ~ capital_run_length_average + word_freq_free + word_freq_our + word_freq_you + char_freq_.21 , data = train, family = "binomial")
summary(mymodel)
res <- predict(mymodel, test, type = "response")
res
res <- predict(mymodel, train, type = "response")
res
### Confusion matrix
confmatrix <- table(Actual_Value = train$class, Predicted_Value = res > 0.5)
confmatrix
write.csv(confmatrix, "confusionMatrix.csv")
#Accuracy
(confmatrix[[1,1]]+confmatrix[[2,2]])/sum(confmatrix)
#################################################################################################################
# Separate logistic regression models of singular continuous values
#################################################################################################################
mymodel_1 <- glm(class ~ capital_run_length_average , data = train, family = "binomial")
mymodel_2 <- glm(class ~ word_freq_free , data = train, family = "binomial")
mymodel_3 <- glm(class ~ word_freq_our  , data = train, family = "binomial")
mymodel_4 <- glm(class ~ word_freq_you  , data = train, family = "binomial")
mymodel_5 <- glm(class ~ char_freq_.21 , data = train, family = "binomial")
summary(mymodel_1)
summary(mymodel_2)
summary(mymodel_3)
summary(mymodel_4)
summary(mymodel_5)
res_1 <- predict(mymodel_1, test, type = "response")
res_2 <- predict(mymodel_2, test, type = "response")
res_3 <- predict(mymodel_3, test, type = "response")
res_4 <- predict(mymodel_4, test, type = "response")
res_5 <- predict(mymodel_5, test, type = "response")
res_1 <- predict(mymodel_1, train, type = "response")
res_2 <- predict(mymodel_2, train, type = "response")
res_3 <- predict(mymodel_3, train, type = "response")
res_4 <- predict(mymodel_4, train, type = "response")
res_5 <- predict(mymodel_5, train, type = "response")
confmatrix_1 <- table(Actual_Value = train$class, Predicted_Value = res_1 > 0.5)
confmatrix_2 <- table(Actual_Value = train$class, Predicted_Value = res_2 > 0.5)
confmatrix_3 <- table(Actual_Value = train$class, Predicted_Value = res_3 > 0.5)
confmatrix_4 <- table(Actual_Value = train$class, Predicted_Value = res_4 > 0.5)
confmatrix_5 <- table(Actual_Value = train$class, Predicted_Value = res_5 > 0.5)
(confmatrix[[1,1]]+confmatrix[[2,2]])/sum(confmatrix)
(confmatrix_1[[1,1]]+confmatrix_1[[2,2]])/sum(confmatrix_1)
(confmatrix_2[[1,1]]+confmatrix_2[[2,2]])/sum(confmatrix_2)
(confmatrix_3[[1,1]]+confmatrix_3[[2,2]])/sum(confmatrix_3)
(confmatrix_4[[1,1]]+confmatrix_4[[2,2]])/sum(confmatrix_4)
(confmatrix_5[[1,1]]+confmatrix_5[[2,2]])/sum(confmatrix_5)
#######################################################################################
#capital run length average - logistic regression plot
newdat_1 <- data.frame(capital_run_length_average=seq(min(train$capital_run_length_average), max(train$capital_run_length_average),len=200))
newdat_1$class = predict(mymodel_1, newdata=newdat_1, type="response")
plot(class~capital_run_length_average, data=train, col="red4", xlim = c(0,100), xlab = "Capital Letter Run Length Average", main = "Logistic Regression")
lines(class ~ capital_run_length_average, newdat_1, col="green4", lwd=2)
########################################################################################
#word freq free - logistic regression plot
newdat_2 <- data.frame(word_freq_free=seq(min(train$word_freq_free), max(train$word_freq_free),len=200))
newdat_2$class = predict(mymodel_2, newdata=newdat_2, type="response")
plot(class~word_freq_free, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word FREE", main = "Logistic Regression")
lines(class ~ word_freq_free, newdat_2, col="green4", lwd=2)
########################################################################################
#word freq our - logistic regression plot
newdat_3 <- data.frame(word_freq_our=seq(min(train$word_freq_our), max(train$word_freq_our),len=200))
newdat_3$class = predict(mymodel_3, newdata=newdat_3, type="response")
plot(class~word_freq_our, data=train, col="red4", xlim = c(0,5), xlab = "Frequency of word OUR", main = "Logistic Regression")
lines(class ~ word_freq_our, newdat_3, col="green4", lwd=2)
########################################################################################
#word freq you - logistic regression plot
newdat_4 <- data.frame(word_freq_you=seq(min(train$word_freq_you), max(train$word_freq_you),len=200))
newdat_4$class = predict(mymodel_4, newdata=newdat_4, type="response")
plot(class~word_freq_you, data=train, col="red4", xlim = c(0,15),  xlab = "Frequency of word YOU", main = "Logistic Regression")
lines(class ~ word_freq_you, newdat_4, col="green4", lwd=2)
########################################################################################
#char freq ! - logistic regression plot
newdat_5 <- data.frame(char_freq_.21=seq(min(train$char_freq_.21), max(train$char_freq_.21),len=200))
newdat_5$class = predict(mymodel_5, newdata=newdat_5, type="response")
plot(class~char_freq_.21, data=train, col="red4", xlim = c(0,6),  xlab = "Frequency of char !", main = "Logistic Regression")
lines(class ~ char_freq_.21, newdat_5, col="green4", lwd=2)
#######################################################################################
#Корелационен анализ и дотплотове
# изследване на корелацията при мейли, категоризирани като спам
cor(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_free)
cor(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_our)
cor(email_dataset_spam$char_freq_.21, email_dataset_spam$capital_run_length_average)
cor(email_dataset_spam$capital_run_length_average, email_dataset_spam$word_freq_you)
cor(email_dataset_spam$capital_run_length_average, email_dataset_spam$word_freq_our)
cor(email_dataset_spam$capital_run_length_average, email_dataset_spam$word_freq_free)
cor(email_dataset_spam$word_freq_free, email_dataset_spam$word_freq_you)
cor(email_dataset_spam$word_freq_free, email_dataset_spam$word_freq_our)
# изследване на корелацията при мейли, категоризирани като неспам
cor(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_free)
cor(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_our)
cor(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$capital_run_length_average)
cor(email_dataset_nonspam$capital_run_length_average, email_dataset_nonspam$word_freq_you)
cor(email_dataset_nonspam$capital_run_length_average, email_dataset_nonspam$word_freq_our)
cor(email_dataset_nonspam$capital_run_length_average, email_dataset_nonspam$word_freq_free)
cor(email_dataset_nonspam$word_freq_free, email_dataset_nonspam$word_freq_you)
cor(email_dataset_nonspam$word_freq_free, email_dataset_nonspam$word_freq_our)
# изследване на корелацията при всички мейли
cor(email_dataset$char_freq_.21, email_dataset$word_freq_free)
cor(email_dataset$char_freq_.21, email_dataset$word_freq_you) #
cor(email_dataset$char_freq_.21, email_dataset$word_freq_our)
cor(email_dataset$char_freq_.21, email_dataset$capital_run_length_average)
cor(email_dataset$capital_run_length_average, email_dataset$word_freq_you)
cor(email_dataset$capital_run_length_average, email_dataset$word_freq_our)
cor(email_dataset$capital_run_length_average, email_dataset$word_freq_free)
cor(email_dataset$word_freq_our, email_dataset$word_freq_you) #
cor(email_dataset$word_freq_free, email_dataset$word_freq_you)
cor(email_dataset$word_freq_free, email_dataset$word_freq_our)
# изчертаване на графиките
plot(model.email_data$capital_run_length_average,model.email_data$word_freq_you)
plot(model.email_data$capital_run_length_average,model.email_data$word_freq_our)
plot(model.email_data$capital_run_length_average,model.email_data$word_freq_free)
plot(model.email_data$word_freq_free,model.email_data$word_freq_you)
plot(model.email_data$capital_run_length_average,model.email_data$char_freq_.21, xlim=c(0,5))
plot(model.email_data$char_freq_.21, model.email_data$word_freq_free)
plot(model.email_data$char_freq_.21, model.email_data$word_freq_you)
# най-значими корелации и графики
cor(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_you) #
plot(email_dataset_spam$char_freq_.21, email_dataset_spam$word_freq_you, xlim = c(0,6),  xlab = "Frequency of char !",ylab = "Frequency of word YOU", main = "Relation between frequency of ! and YOU, SPAM")
cor(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_you)
plot(email_dataset_nonspam$char_freq_.21, email_dataset_nonspam$word_freq_you, xlim = c(0,6),ylim=c(0,12),  xlab = "Frequency of char !",ylab = "Frequency of word YOU", main = "Relation between frequency of ! and YOU, NONSPAM")
cor(email_dataset_spam$word_freq_our, email_dataset_spam$word_freq_you) #
plot(email_dataset_spam$word_freq_our, email_dataset_spam$word_freq_you, xlab = "Frequency of word OUR",ylab = "Frequency of word YOU", main = "Relation between frequency of OUR and YOU, SPAM")
cor(email_dataset_nonspam$word_freq_our, email_dataset_nonspam$word_freq_you)
plot(email_dataset_nonspam$word_freq_our, email_dataset_nonspam$word_freq_you, ylim=c(0,12), xlab = "Frequency of word OUR",ylab = "Frequency of word YOU", main = "Relation between frequency of OUR and YOU, NONSPAM")
